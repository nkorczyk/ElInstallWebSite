package away3d.extrusions{   	import flash.display.BitmapData;	import flash.events.*;	import away3d.containers.View3D;	public class CollisionMap extends EventDispatcher{				private var detectBmd:BitmapData;		private var oDetect:Object = {};		private var factorX:Number;		private var factorY:Number;		private var offsetX:Number;		private var offsetY:Number;		private var view:Object;				public function CollisionMap(source:BitmapData, view:Object, factorX:Number = 0 , factorY:Number = 0)        {			this.view = view;			this.detectBmd = source;			this.factorX = factorX;			this.factorY = factorY;			this.offsetX = source.rect.width*.5;			this.offsetY = source.rect.height*.5;		}				public function read(x:Number, y:Number):void        {			var col:Number = x/factorX;			var row:Number = y/factorY; 			col += offsetX;			row += offsetY;			var color:Number = detectBmd.getPixel(col, row);						if(oDetect["_"+color] != null){				fireColorEvent(oDetect["_"+color].eventID);			}		}				public function getColorAt(x:Number, y:Number):Number        {			var col:Number = x/factorX;			var row:Number = y/factorY; 			col += offsetX;			row += offsetY;			return detectBmd.getPixel(col, row);		}				public function setColorEvent(color:Number, eventID:String, listener:Function):void        {			oDetect["_"+color] = {color:color, eventID:eventID};			addEventListener(eventID, listener, false, 0, false);        }				private function fireColorEvent(eventID:String):void        {			dispatchEvent(new Event(eventID));        }				public function set offsetx(val:Number):void        {			offsetX = val;        }		public function set offsety(val:Number):void        {			offsetY = val;        }			}}